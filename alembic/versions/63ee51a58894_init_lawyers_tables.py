"""init lawyers tables

Revision ID: 63ee51a58894
Revises: 03d9d3ebb83d
Create Date: 2025-10-21 21:18:29.317615

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '63ee51a58894'
down_revision: Union[str, Sequence[str], None] = '03d9d3ebb83d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mini_call_centers',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regions_lawyer',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles_lawyer',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('districts_lawyer',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('region_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions_lawyer.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_lawyer',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles_lawyer.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_users_lawyer_email'), 'users_lawyer', ['email'], unique=True)
    op.create_table('lawyers',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cases_participated', sa.Integer(), nullable=False),
    sa.Column('cases_won', sa.Integer(), nullable=False),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('license_is_active', sa.Boolean(), nullable=False),
    sa.Column('license_issued_at', sa.Date(), nullable=True),
    sa.Column('license_expires_at', sa.Date(), nullable=True),
    sa.Column('career_timeline', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('specializations', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('photos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('region_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('district_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('organization_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('is_phone_reachable', sa.Boolean(), nullable=False),
    sa.Column('mini_call_center_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('rating_average', sa.Float(), nullable=True),
    sa.Column('rating_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts_lawyer.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['mini_call_center_id'], ['mini_call_centers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['region_id'], ['regions_lawyer.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users_lawyer.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lawyers')
    op.drop_index(op.f('ix_users_lawyer_email'), table_name='users_lawyer')
    op.drop_table('users_lawyer')
    op.drop_table('districts_lawyer')
    op.drop_table('roles_lawyer')
    op.drop_table('regions_lawyer')
    op.drop_table('mini_call_centers')
    # ### end Alembic commands ###
